version: '3'
services:
  traefik:
    image: traefik:v2.5
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=mail@your_domain.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    networks:
      - mynetwork

  chatbot-nginx:
    image: nginx:latest
    container_name: chatbot-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.chatbot.loadbalancer.server.port=80"
      - "traefik.http.routers.chatbot-http.entrypoints=web"
      - "traefik.http.routers.chatbot-http.rule=Host(`your_domain.com`)"
      - "traefik.docker.network=mynetwork"
      - "traefik.http.routers.chatbot-https.entrypoints=websecure"
      - "traefik.http.routers.chatbot-https.rule=Host(`your_domain.com`)"
      - "traefik.http.routers.chatbot-https.tls=true"
      - "traefik.http.routers.chatbot-https.tls.certresolver=myresolver"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https-redirect.redirectscheme.permanent=true"
      - "traefik.http.routers.chatbot-http.middlewares=https-redirect"
    depends_on:
      - chatbot-app
    networks:
      - mynetwork

  chatbot-app:
    container_name: chatbot-app
    build: .
    depends_on:
      - mongodb
      - weaviate
    expose:
      - 5000
    networks:
      - mynetwork
    env_file:
      - .env

  mongodb:
    image: mongo:latest
    ports:
      - 27016:27017
    volumes:
      - mongodb_data:/data/db
    command: ["--bind_ip_all"]
    networks:
      - mynetwork

  weaviate:
    volumes:
      - weaviate_data:/var/lib/weaviate
    command:
      - --host
      - 0.0.0.0
      - --port
      - '8080'
      - --scheme
      - http
    image: semitechnologies/weaviate:1.19.1
    ports:
      - 8080:8080
    restart: on-failure:0
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'text2vec-openai'
      ENABLE_MODULES: 'text2vec-openai'
      CLUSTER_HOSTNAME: 'node1'
    networks:
      - mynetwork

volumes:
  mongodb_data:
  weaviate_data:

networks:
  mynetwork:
    driver: bridge
